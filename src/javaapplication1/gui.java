/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;

import com.fazecast.jSerialComm.SerialPort;
import java.awt.Image;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;

/**
 *
 * @author barba
 */
public class gui extends javax.swing.JFrame {

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
        setLocationRelativeTo(null);
        Image img = new ImageIcon ("GATO.jpg").getImage(); 
        this.setIconImage(img);
        ColocarHoraNoTopo();
        /*String e o nome da musica do Prince*/
        String clicked = "interface-13.wav";   
            PlayMusicSEMLOOP(clicked);
           String caminho = "VelvetKittyCat.wav";
        try {
            Thread.sleep(800);
        } catch (InterruptedException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        }
          PlayMusic (caminho);
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        PainelBaixo = new javax.swing.JPanel();
        BOTAOLIBERAR = new javax.swing.JButton();
        ProgramarLiberacaoTexto = new javax.swing.JLabel();
        BlocoHora = new javax.swing.JTextField();
        BlocoMinutos = new javax.swing.JTextField();
        BotaoIr = new javax.swing.JButton();
        TextoHora = new javax.swing.JLabel();
        TextoMinutos = new javax.swing.JLabel();
        BotaoSair = new javax.swing.JButton();
        BotaoImprimir = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        BlocoDeTexto = new javax.swing.JTextArea();
        PainelTopo = new javax.swing.JPanel();
        SmartFeeder = new javax.swing.JLabel();
        TextoDataAtual = new javax.swing.JLabel();
        TextoHoraAtual = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jTextPane1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Smart Feeder");
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLayeredPane1.setBackground(new java.awt.Color(0, 0, 0));

        PainelBaixo.setBackground(new java.awt.Color(0, 0, 0));

        BOTAOLIBERAR.setFont(new java.awt.Font("Segoe UI Emoji", 1, 36)); // NOI18N
        BOTAOLIBERAR.setText("LIBERAR");
        BOTAOLIBERAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BOTAOLIBERARMouseClicked(evt);
            }
        });
        BOTAOLIBERAR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BOTAOLIBERARKeyPressed(evt);
            }
        });

        ProgramarLiberacaoTexto.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        ProgramarLiberacaoTexto.setForeground(new java.awt.Color(255, 255, 255));
        ProgramarLiberacaoTexto.setText("Progamar liberação (hora formato 24horas)");

        BlocoHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlocoHoraActionPerformed(evt);
            }
        });

        BlocoMinutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlocoMinutosActionPerformed(evt);
            }
        });

        BotaoIr.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BotaoIr.setText("OK");
        BotaoIr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotaoIrMouseClicked(evt);
            }
        });

        TextoHora.setForeground(new java.awt.Color(255, 255, 255));
        TextoHora.setText("HORA");

        TextoMinutos.setForeground(new java.awt.Color(255, 255, 255));
        TextoMinutos.setText("MINUTOS");

        BotaoSair.setBackground(new java.awt.Color(255, 51, 0));
        BotaoSair.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BotaoSair.setForeground(new java.awt.Color(255, 255, 255));
        BotaoSair.setText("SAIR");
        BotaoSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotaoSairMouseClicked(evt);
            }
        });

        BotaoImprimir.setBackground(new java.awt.Color(0, 51, 204));
        BotaoImprimir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BotaoImprimir.setForeground(new java.awt.Color(255, 255, 255));
        BotaoImprimir.setText("IMPRIMIR");
        BotaoImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotaoImprimirMouseClicked(evt);
            }
        });
        BotaoImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoImprimirActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("LIMPAR");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        BlocoDeTexto.setEditable(false);
        BlocoDeTexto.setColumns(20);
        BlocoDeTexto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BlocoDeTexto.setLineWrap(true);
        BlocoDeTexto.setRows(5);
        BlocoDeTexto.setText("----------------------------------------");
        BlocoDeTexto.setToolTipText("");
        BlocoDeTexto.setAutoscrolls(false);
        jScrollPane2.setViewportView(BlocoDeTexto);

        javax.swing.GroupLayout PainelBaixoLayout = new javax.swing.GroupLayout(PainelBaixo);
        PainelBaixo.setLayout(PainelBaixoLayout);
        PainelBaixoLayout.setHorizontalGroup(
            PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelBaixoLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelBaixoLayout.createSequentialGroup()
                        .addComponent(BotaoSair, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(BotaoImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ProgramarLiberacaoTexto)
                    .addGroup(PainelBaixoLayout.createSequentialGroup()
                        .addGroup(PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BlocoHora, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PainelBaixoLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(TextoHora)))
                        .addGap(27, 27, 27)
                        .addGroup(PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelBaixoLayout.createSequentialGroup()
                                .addComponent(BlocoMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BotaoIr))
                            .addGroup(PainelBaixoLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(TextoMinutos))))
                    .addComponent(BOTAOLIBERAR, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        PainelBaixoLayout.setVerticalGroup(
            PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelBaixoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelBaixoLayout.createSequentialGroup()
                        .addComponent(BOTAOLIBERAR, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(ProgramarLiberacaoTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BlocoHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BlocoMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotaoIr))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextoHora)
                            .addComponent(TextoMinutos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                        .addGroup(PainelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotaoSair)
                            .addComponent(BotaoImprimir)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(35, 35, 35))
        );

        PainelTopo.setBackground(new java.awt.Color(0, 204, 204));
        PainelTopo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                PainelTopoMouseDragged(evt);
            }
        });
        PainelTopo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PainelTopoMousePressed(evt);
            }
        });

        SmartFeeder.setFont(new java.awt.Font("Yu Gothic UI Semibold", 2, 30)); // NOI18N
        SmartFeeder.setForeground(new java.awt.Color(255, 255, 255));
        SmartFeeder.setText("Smart Feeder");

        TextoDataAtual.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TextoDataAtual.setForeground(new java.awt.Color(255, 255, 255));

        TextoHoraAtual.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TextoHoraAtual.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PainelTopoLayout = new javax.swing.GroupLayout(PainelTopo);
        PainelTopo.setLayout(PainelTopoLayout);
        PainelTopoLayout.setHorizontalGroup(
            PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTopoLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(SmartFeeder, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addComponent(TextoDataAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(TextoHoraAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );
        PainelTopoLayout.setVerticalGroup(
            PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTopoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextoHoraAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TextoDataAtual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SmartFeeder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLayeredPane1.setLayer(PainelBaixo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(PainelTopo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PainelTopo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PainelBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addComponent(PainelTopo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PainelBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        getAccessibleContext().setAccessibleDescription("Smart Feeder gui aplication");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BOTAOLIBERARKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BOTAOLIBERARKeyPressed
        

    }//GEN-LAST:event_BOTAOLIBERARKeyPressed

    private void BOTAOLIBERARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BOTAOLIBERARMouseClicked
       String clicked = "achive-sound.wav";   
        PlayMusicSEMLOOP(clicked);
       BlocoDeTexto.setText(BlocoDeTexto.getText()+"\nRação liberada às "+PegarHoraAtual());

        /*aqui estou chamando o metodo que vai enviar o dado pra saída da porta que o arduino está conectado*/
        try {
            liberar();
            // TODO add your handling code here:
        } catch (InterruptedException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
        
    }//GEN-LAST:event_BOTAOLIBERARMouseClicked

    private void BlocoHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlocoHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BlocoHoraActionPerformed

    private void BlocoMinutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlocoMinutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BlocoMinutosActionPerformed

    private void BotaoSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotaoSairMouseClicked
         String clicked = "achive-sound.wav";   
        PlayMusicSEMLOOP(clicked);
        /*nesse comando eu fecho a janela*/
        System.exit(WIDTH);
        // TODO add your handling code here:
    }//GEN-LAST:event_BotaoSairMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
           String clicked = "achive-sound.wav";   
        PlayMusicSEMLOOP(clicked);
        /*Nesse comando eu limpo o bloco de texto*/
        BlocoDeTexto.setText("----------------------------------------");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void BotaoIrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotaoIrMouseClicked
          String clicked = "achive-sound.wav";   
        PlayMusicSEMLOOP(clicked);
        String horaProgramada, minutoProgramado;
        horaProgramada=BlocoHora.getText();
        minutoProgramado=BlocoMinutos.getText();
        BlocoDeTexto.setText(BlocoDeTexto.getText()+"\nRação programada pra ser liberada às "+horaProgramada+":"+minutoProgramado);    
        // TODO add your handling code here:
    }//GEN-LAST:event_BotaoIrMouseClicked

    private void BotaoImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoImprimirActionPerformed
       String clicked = "achive-sound.wav";   
        PlayMusicSEMLOOP(clicked);
        try {
            BlocoDeTexto.print();
            // TODO add your handling code here:
        } catch (PrinterException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoImprimirActionPerformed

    
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    
            for (double i = 0.0 ; i<=1.0;i+=0.1){
        String s = i+"";
        Float f = Float.valueOf(s);
        this.setOpacity(f);
            try {
                Thread.sleep(50);
            } catch (InterruptedException ex) {
                Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }

    }//GEN-LAST:event_formWindowOpened

      int xx, xy;
    private void PainelTopoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PainelTopoMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx,y-xy);
        // TODO add your handling code here:
    }//GEN-LAST:event_PainelTopoMouseDragged

    private void PainelTopoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PainelTopoMousePressed
        xx= evt.getX();
        xy = evt.getY();
        // TODO add your handling code here:
    }//GEN-LAST:event_PainelTopoMousePressed

    private void BotaoImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotaoImprimirMouseClicked

        String clicked = "achive-sound.wav";   
        PlayMusic(clicked);
        // TODO add your handling code here:
    }//GEN-LAST:event_BotaoImprimirMouseClicked

 
    
    
        
    /*aqui eu to colocando a hora no topo da janela*/
    public void ColocarHoraNoTopo(){
    new Thread(new Runnable() {
        @Override
        public void run() {
            while (true){
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
                }
                Date date = new Date ();
                SimpleDateFormat tf = new SimpleDateFormat("hh:mm:ss aa");
                SimpleDateFormat df = new SimpleDateFormat("EEEE, dd-MM,yyyy");
                String time = tf.format(date);
                TextoHoraAtual.setText(time.split(" ")[0]+" "+time.split(" ")[1]);
                TextoDataAtual.setText(df.format(date));
                
                
            }
        }
    }).start();
    }
    
    
    /*uso pra pegar a hora atual e retornar ela*/
    public String PegarHoraAtual (){
       SimpleDateFormat tf = new SimpleDateFormat("hh:mm:ss aa");
        String hora = tf.format(new Date());
        return hora;
 
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }
    

    /* o metodo que vai mandar um byte pra saida da porta que o microcontrolador está conectado*/
    public void liberar() throws InterruptedException, IOException {
        SerialPort sp = SerialPort.getCommPort("COM6");
        sp.setComPortParameters(9600, 8, 1, 0);
        sp.setComPortTimeouts(SerialPort.TIMEOUT_WRITE_BLOCKING, 0, 0);

        //-------------------------------------------------------------
        if (!sp.openPort()) {
            System.out.println("\nCOM port NOT available\n");
            return;
        }
        //-------------------------------------------------------------
        Scanner input = new Scanner(System.in);

//            System.out.print("\nEnter number of LED blinks (0 to exit): ");
        Integer blinks = 2;
//            if(blinks == 0) break;
        Thread.sleep(1500);
//            sp.getOutputStream().write(blinks.byteValue());
        sp.getOutputStream().write(blinks.byteValue());
        
        input.close();
    }
    
    
    public void metodoteste (){
     SerialPort sp = SerialPort.getCommPort("COM6");
        sp.setComPortParameters(9600, 8, 1, 0);
        sp.setComPortTimeouts(SerialPort.TIMEOUT_WRITE_BLOCKING, 0, 0);
        
        /*estou passando os texto dos blocos de texto para variavel numerica inteiro*/
        int hora = Integer.parseInt(BlocoHora.getText());
        int minutos = Integer.parseInt(BlocoMinutos.getText());
        
        
        
        
    }
    
    
    /*aqui eu to fazendo o metodo de música de fundo*/
     public static void PlayMusic (String local){
        try {
            File musicPath = new File (local);
            if (musicPath.exists()){
                AudioInputStream audioInput = AudioSystem.getAudioInputStream(musicPath);
                Clip clip = AudioSystem.getClip();
                clip.open(audioInput);
                clip.start();
                clip.loop(Clip.LOOP_CONTINUOUSLY);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
     
       public static void PlayMusicSEMLOOP (String local){
        try {
            File musicPath = new File (local);
            if (musicPath.exists()){
                AudioInputStream audioInput = AudioSystem.getAudioInputStream(musicPath);
                Clip clip = AudioSystem.getClip();
                clip.open(audioInput);
                clip.start();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BOTAOLIBERAR;
    private javax.swing.JTextArea BlocoDeTexto;
    private javax.swing.JTextField BlocoHora;
    private javax.swing.JTextField BlocoMinutos;
    private javax.swing.JButton BotaoImprimir;
    private javax.swing.JButton BotaoIr;
    private javax.swing.JButton BotaoSair;
    private javax.swing.JPanel PainelBaixo;
    private javax.swing.JPanel PainelTopo;
    private javax.swing.JLabel ProgramarLiberacaoTexto;
    private javax.swing.JLabel SmartFeeder;
    private javax.swing.JLabel TextoDataAtual;
    private javax.swing.JLabel TextoHora;
    private javax.swing.JLabel TextoHoraAtual;
    private javax.swing.JLabel TextoMinutos;
    private javax.swing.JButton jButton2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
